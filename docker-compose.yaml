version: "3.9"

services:
  hot-worker:
    build:
      context: .
      dockerfile: ./deployments/worker/Dockerfile
    command: "/usr/local/bin/worker --config=/usr/src/app/cmd/worker/config-hot-container.yaml"
    deploy:
      replicas: 5
    restart: always
    depends_on:
      temporal:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
    networks:
      - temporal-network

  cold-worker:
    build:
      context: .
      dockerfile: ./deployments/worker/Dockerfile
    command: "/usr/local/bin/worker --config=/usr/src/app/cmd/worker/config-cold-container.yaml"
    deploy:
      replicas: 5
    restart: always
    depends_on:
      temporal:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
    networks:
      - temporal-network

  starter:
    container_name: "starter"
    build:
      context: .
      dockerfile: ./deployments/starter/Dockerfile
    command: "/usr/local/bin/starter --config=/usr/src/app/cmd/starter/config-container.yaml"
    restart: always
    depends_on:
      temporal:
        condition: service_healthy
    ports:
      - "8888:8888"
    volumes:
      - .:/usr/src/app
    networks:
      - temporal-network

  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:${POSTGRESQL_VERSION}
    networks:
      - temporal-network
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/postgresql/data
  temporal:
    container_name: temporal
    depends_on:
      - postgresql
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    networks:
      - temporal-network
    ports:
      - "7233:7233"
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
    healthcheck:
      test:
        [
          "CMD",
          "tctl",
          "--address",
          "temporal:7233",
          "workflow",
          "list"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:${TEMPORAL_ADMINTOOLS_VERSION}
    networks:
      - temporal-network
    stdin_open: true
    tty: true
  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    networks:
      - temporal-network
    ports:
      - "8080:8080"

networks:
  temporal-network:
    driver: bridge